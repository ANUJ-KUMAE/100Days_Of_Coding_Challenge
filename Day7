Anagram Strings
BasicAccuracy: 46.3%Submissions: 6K+Points: 1
Lamp
Stand out from the crowd. Prepare with Complete Interview Preparation  

Given two strings S1 and S2 . Print "1" if both strings are anagrams otherwise print "0" .

Note: An anagram of a string is another string with exactly the same quantity of each character in it, in any order.

Example 1:

Input: S1 = "cdbkdub" , S2 = "dsbkcsdn"
Output: 0 
Explanation: Length of S1 is not same
as length of S2.
Example 2:

Input: S1 = "geeks" , S2 = "skgee"
Output: 1
Explanation: S1 has the same quantity 
of each character in it as S2.

Your Task:  
You don't need to read input or print anything. Your task is to complete the function areAnagram() which takes S1 and S2 as input and returns "1" if both strings are anagrams otherwise returns "0".

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(K) ,Where K= Contstant

Solution:

class Solution {
    static int areAnagram(String S1, String S2) {
        int len1,len2;
        //String S3 = " ";
        //char ch;
        len1 = S1.length();
        len2 = S2.length();
        if(len1!=len2)
        {
            return 0;
        }
        else
        {
            HashMap<Character, Integer> map = new HashMap<>();
        
        for (int i = 0; i < S1.length(); i++) {
            
            if (map.containsKey(S1.charAt(i))) {
                
                map.put(S1.charAt(i),
                        map.get(S1.charAt(i)) + 1);
            }
            else {
                
                map.put(S1.charAt(i), 1);
            }
        }
        
        for (int i = 0; i < S2.length(); i++) {
            
            if (map.containsKey(S2.charAt(i))) {
                
                map.put(S2.charAt(i),
                        map.get(S2.charAt(i)) - 1);
            }
            else {
                return 0;
            }
        }
        
        Set<Character> keys = map.keySet();
        
        for (Character key : keys) {
            if (map.get(key) != 0) {
                return 0;
            }
        }
        return 1;
            
        }
    }
}
