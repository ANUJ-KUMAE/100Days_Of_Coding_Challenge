Minimum Size Subarray in Infinite Array
Solved
Medium
Topics
Companies
Hint
You are given a 0-indexed array nums and an integer target.

A 0-indexed array infinite_nums is generated by infinitely appending the elements of nums to itself.

Return the length of the shortest subarray of the array infinite_nums with a sum equal to target. If there is no such subarray return -1.

 

Example 1:

Input: nums = [1,2,3], target = 5
Output: 2
Explanation: In this example infinite_nums = [1,2,3,1,2,3,1,2,...].
The subarray in the range [1,2], has the sum equal to target = 5 and length = 2.
It can be proven that 2 is the shortest length of a subarray with sum equal to target = 5.
Example 2:

Input: nums = [1,1,1,2,3], target = 4
Output: 2
Explanation: In this example infinite_nums = [1,1,1,2,3,1,1,1,2,3,1,1,...].
The subarray in the range [4,5], has the sum equal to target = 4 and length = 2.
It can be proven that 2 is the shortest length of a subarray with sum equal to target = 4.

Solution: 

class Solution {
    public int minSizeSubarray(int[] nums, int target) 
    {
        long sum = 0L, su = 0L;
        for (int a : nums)
            sum += a;
        int n = nums.length, k = (int)(target / sum), res = n;
        target %= sum;
        if (target == 0) {
            return k * n;
        }

        HashMap<Long, Integer> dp = new HashMap<>();
        dp.put(0L, -1);

        for (int i = 0; i < 2 * n; ++i) {
            su += nums[i % n];
            if (dp.containsKey(su - target)) {
                res = Math.min(res, i - dp.get(su - target));
            }
            dp.put(su, i);
        }

        return res < n ? res + k * n : -1;    
    }
}
